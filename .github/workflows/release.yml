name: Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  windows-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure CMake (VS 2022, x64)
        shell: pwsh
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64

      - name: Build (Release)
        shell: pwsh
        run: |
          cmake --build build --config Release

      - name: Package artifact (zip)
        id: package
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $version = "${{ github.ref_name }}"
          $arch = "x64"
          $outDir = Join-Path $PWD "dist"
          if (Test-Path $outDir) { Remove-Item -Recurse -Force $outDir }
          New-Item -ItemType Directory -Path $outDir | Out-Null

          $exePath = "build\Release\SimpleAudioSwitch.exe"
          if (!(Test-Path $exePath)) { throw "Executable not found at $exePath" }

          Copy-Item $exePath $outDir
          if (Test-Path "README.md") { Copy-Item "README.md" $outDir }
          if (Test-Path "LICENSE") { Copy-Item "LICENSE" $outDir }

          $zipName = "SimpleAudioSwitch-$version-windows-$arch.zip"
          if (Test-Path $zipName) { Remove-Item $zipName -Force }
          Compress-Archive -Path (Join-Path $outDir '*') -DestinationPath $zipName

          echo "zip_path=$zipName" >> $env:GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.package.outputs.zip_path }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          generate_release_notes: true

